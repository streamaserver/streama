buildscript {
    ext {
        grailsVersion = project.grailsVersion
    }
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "org.grails.plugins:hibernate4:5.0.8"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:2.8.2"
        classpath "org.grails.plugins:views-gradle:1.0.12"
    }
}

version "1.10.5"
group "streama"


apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"org.grails.grails-web"
apply plugin:"org.grails.grails-gsp"
apply plugin:"asset-pipeline"
apply plugin:"org.grails.plugins.views-json"
apply plugin:'org.springframework.boot'


springBoot {
    executable = true
}

ext {
    grailsVersion = project.grailsVersion
    gradleWrapperVersion = project.gradleWrapperVersion
}

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
}

dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
    }
    applyMavenExclusions false
}

dependencies {
    // assets
    assets "com.craigburke.angular:angular-template-asset-pipeline:2.3.0"
    assets "com.craigburke.angular:angular-annotate-asset-pipeline:2.4.0"
    assets "com.craigburke:js-closure-wrap-asset-pipeline:1.2.0"
    assets 'com.bertramlabs.plugins:sass-asset-pipeline:2.11.6'

    // compile
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-plugin-url-mappings"
    compile "org.grails:grails-plugin-rest"
    compile "org.grails:grails-plugin-codecs"
    compile "org.grails:grails-plugin-interceptors"
    compile "org.grails:grails-plugin-services"
    compile "org.grails:grails-plugin-datasource"
    compile "org.grails:grails-plugin-databinding"
    compile "org.grails:grails-plugin-async"
    compile "org.grails:grails-web-boot"
    compile "org.grails:grails-logging"
    compile "org.grails.plugins:cache"
    compile "org.grails:grails-plugin-gsp"
    compile "org.grails.plugins:views-json"
    compile "org.grails.plugins:views-json-templates"
    compile "org.grails.plugins:hibernate5"
    compile "org.grails.plugins:angular-scaffolding:1.0.1"
    compile "org.hibernate:hibernate-core:5.1.2.Final"
    compile "org.hibernate:hibernate-ehcache:5.1.2.Final"
    compile 'org.grails.plugins:spring-security-core:3.0.4'
    compile "org.grails.plugins:mail:3.0.0"
    compile "org.grails.plugins:grails-spring-websocket:2.4.1"
    compile "eu.bitwalker:UserAgentUtils:1.21"
    compile "org.grails.plugins:spring-security-ldap:3.0.2"

    // runtime
    runtime "com.h2database:h2"
    runtime 'mysql:mysql-connector-java:5.1.36'
    runtime "com.bertramlabs.plugins:asset-pipeline-grails:2.11.6"
    runtime 'javax.xml.bind:jaxb-api:2.3.0'

    // custom
    console "org.grails:grails-console"
    profile "org.grails.profiles:angular"
    runtime "org.grails.plugins:async:4.0.0"
    compile ("org.apache.tika:tika-parsers:1.12") {
        exclude group: 'org.ow2.asm', module: 'asm'
        exclude group: 'com.healthmarketscience.jackcess'
        exclude group: 'net.sourceforge.jmatio'
        exclude group: 'org.tukaani', module: 'xz'
        exclude group: 'org.apache.pdfbox'
        exclude group: 'org.apache.poi'
        exclude group: 'org.codelibs', module: 'jhighlight'
        exclude group: 'com.pff', module: 'java-libpst'
        exclude group: 'com.github.junrar'
        exclude group: 'org.apache.cxf'
        exclude group: 'org.apache.opennlp'
        exclude group: 'de.l3s.boilerpipe'
        exclude group: 'com.rometools'
        exclude group: 'org.bouncycastle'
        exclude group: 'org.ccil.cowan.tagsoup'
        exclude group: 'com.googlecode.json-simple'
        exclude group: 'com.googlecode.juniversalchardet'
        exclude group: 'edu.ucar', module: 'netcdf4'
        exclude group: 'edu.ucar', module: 'grib'
        exclude group: 'edu.ucar', module: 'cdm'
        exclude group: 'edu.ucar', module: 'httpservices'
        exclude group: 'org.apache.commons', module: 'commons-csv'
        exclude group: 'org.apache.commons', module: 'commons-exec'
        exclude group: 'org.apache.sis.storage'
        exclude group: 'org.apache.sis.core'
        exclude group: 'org.json', module: 'json'
        exclude group: 'com.google.code.gson'
        exclude group: 'org.apache.commons', module: 'commons-compress'
        exclude group: 'org.opengis', module: 'geoapi'
        exclude group: 'org.apache.james'
    }

      // Fix Log4Shell
  compile 'org.apache.logging.log4j:log4j-api:2.17.1'
  compile 'org.apache.logging.log4j:log4j-core:2.17.1'
  compile 'org.apache.logging.log4j:log4j-to-slf4j:2.17.1'
  compile 'ch.qos.logback:logback-classic:1.2.8'
  compile 'ch.qos.logback:logback-core:1.2.8'

  // test
    testCompile "org.grails:grails-plugin-testing"
    testCompile "org.grails.plugins:geb"
    testCompile "org.grails:grails-datastore-rest-client"
    testRuntime "org.seleniumhq.selenium:selenium-htmlunit-driver:2.47.1"
    testRuntime "net.sourceforge.htmlunit:htmlunit:2.18"
}

task wrapper(type: Wrapper) {
    gradleVersion = gradleWrapperVersion
}

assets {
    minifyJs = true
    minifyCss = true
}


bootRun {
    // local.config.location is just a random name. You can use yours.
    jvmArgs = ['-Dlocal.config.location=app-config.yml', '-Dlocal.config.regex=CustomRegex.yml']

    tasks.withType(JavaExec).each { task ->
    	task.systemProperties System.properties
	}
}

grails {
  pathingJar = true
}
