buildscript {
    ext {
        grailsVersion = project.grailsVersion
    }
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:2.6.4"
//        classpath "gradle.plugin.com.craigburke.gradle:karma-gradle:1.4.3"
//        classpath "gradle.plugin.com.craigburke.gradle:bower-installer-gradle:2.5.1"
        classpath "org.grails.plugins:hibernate4:5.0.5"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:2.8.2"
        classpath "org.grails.plugins:views-gradle:1.0.12"
    }
}

version "1.6.0-RC6"
group "streama"


apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"war"
apply plugin:"org.grails.grails-web"
apply plugin:"org.grails.grails-gsp"
//apply plugin:"com.craigburke.karma"
//apply plugin:"com.craigburke.client-dependencies"
apply plugin:"asset-pipeline"
apply plugin:"org.grails.plugins.views-json"
apply plugin:'org.springframework.boot'


springBoot {
    executable = true
}

ext {
    grailsVersion = project.grailsVersion
    gradleWrapperVersion = project.gradleWrapperVersion
}

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
}

dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
    }
    applyMavenExclusions false
}

dependencies {
    assets "com.craigburke.angular:angular-template-asset-pipeline:2.3.0"
    assets "com.craigburke.angular:angular-annotate-asset-pipeline:2.4.0"
    assets "com.craigburke:js-closure-wrap-asset-pipeline:1.2.0"
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-plugin-url-mappings"
    compile "org.grails:grails-plugin-rest"
    compile "org.grails:grails-plugin-codecs"
    compile "org.grails:grails-plugin-interceptors"
    compile "org.grails:grails-plugin-services"
    compile "org.grails:grails-plugin-datasource"
    compile "org.grails:grails-plugin-databinding"
    compile "org.grails:grails-plugin-async"
    compile "org.grails:grails-web-boot"
    compile "org.grails:grails-logging"
    compile "org.grails.plugins:cache"
    compile "org.grails:grails-plugin-gsp"
    compile "org.grails.plugins:angular-scaffolding:1.0.1"
    compile "org.grails.plugins:hibernate5"
    compile "org.hibernate:hibernate-core:5.1.2.Final"
    compile "org.hibernate:hibernate-ehcache:5.1.2.Final"
    compile "org.grails.plugins:views-json"
    compile "org.grails.plugins:views-json-templates"
    console "org.grails:grails-console"
    profile "org.grails.profiles:angular"
    runtime "com.h2database:h2"
    runtime "com.bertramlabs.plugins:asset-pipeline-grails:2.11.6"
    assets 'com.bertramlabs.plugins:sass-asset-pipeline:2.11.6'
    testCompile "org.grails:grails-plugin-testing"
    testCompile "org.grails.plugins:geb"
    testCompile "org.grails:grails-datastore-rest-client"
    testRuntime "org.seleniumhq.selenium:selenium-htmlunit-driver:2.47.1"
    testRuntime "net.sourceforge.htmlunit:htmlunit:2.18"


    //custom
    compile 'org.grails.plugins:spring-security-core:3.0.3'
    compile "org.grails.plugins:mail:2.0.0.RC4"
    compile "org.grails.plugins:grails-spring-websocket:2.3.0"
    compile group: 'eu.bitwalker', name: 'UserAgentUtils', version: '1.20'
    runtime 'mysql:mysql-connector-java:5.1.36'
}

task wrapper(type: Wrapper) {
    gradleVersion = gradleWrapperVersion
}
//bower {
//    'angular'('1.4.x') {
//        source 'angular.js'
//    }
//    'angular-resource'('1.4.x') {
//        source 'angular-resource.js' >> '/angular/'
//    }
//    'angular-mocks'('1.4.x') {
//        source 'angular-mocks.js' >> '/angular/'
//    }
//    'angular-bootstrap'('1.1.x') {
//        source 'ui-bootstrap-tpls.js' >> '/angular/'
//    }
//    'bootstrap'('3.x.x') {
//        source 'dist/css/bootstrap.css' >> '/bootstrap/'
//    }
//}

//karma {
//    dependencies(['karma-wrap-preprocessor'])
//
//    profile 'angularJS'
//
//    preprocessors = [
//        'grails-app/assets/javascripts/**/*.js': ['wrap']
//    ]
//
//    wrapPreprocessor = [
//        template: "(function () { 'use strict';  <%= contents %> })()"
//    ]
//}

assets {
    minifyJs = true
    minifyCss = true
}


bootRun {
    // local.config.location is just a random name. You can use yours.
    jvmArgs = ['-Dlocal.config.location=app-config.yml', '-Dlocal.config.regex=CustomRegex.yml']

    tasks.withType(JavaExec).each { task ->
    	task.systemProperties System.properties
	}
}

